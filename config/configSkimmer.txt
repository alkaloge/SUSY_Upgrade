
$ This is a test configuration for the DAnalysis analyser/skimmer
$ Comments can be added following a "$"
$
$ The first part described the general configuration of the analyser
$ The output directory will be created in the directory the analyser is
$ run from
$ The output file will be created within the output directory and will
$ contain any histogram that was initialised (see skelton analyser sourcecode)
$ It is also possible to create a flat ntuple or a skim. In this case,
$ each sample will result in a unique output file containing the ntuple or skim.
$ In addition, a new configuration file (like this) will be created that allows
$ to run over the new skim/ntuple with the DAnalysis framework, too, taking
$ care of proper normalisation etc.
$


[config-begin]

    $Outputdir  = root://eoscms.cern.ch//store/user/bschneid/SUSY_Upgrade_Skimmer/output11/
    Outputdir  = /eos/cms/store/user/bschneid/upgrade/n-tuples/production016/
    Outputfile = outputfile.root

$ The luminosity is to be given to match the cross section values listed in the section "inputfiles"
$ In this example, the cross sections are given in fb.
$ In other cases that may be pb and the luminosity value here needs to be multplied by 1000.

    Lumi       = 3000

$ If the testmode is activated, only a fraction of the events will be processed.
$ This mode is meant to test histogram ranges etc. The scaling does not necessarily
$ correspond to the relative cross sections of the processes

    Testmode   = false

$ Maximum number of child processes that are spawned simultaneously, each running on a
$ different input file.

    Maxchilds  = 6

$ This Samplesdir can be a local directory or refer to off-site locations via xrootd

    Samplesdir = root://eoscms.cern.ch//store/user/bschneid/upgrade/samples/

$ The analyser will have a postProcess() function. This function should be used to
$ extract parameters from the filled histograms, do additional calculations, etc.
$ If only this post process function should be run (the histograms are already created)
$ then this switch can be set to true. The default is "false"

    RunOnOutputOnly = false

[config-end]



[inputfiles-begin]

$ The input files are defined here. The syntax is the following (separated by ","):
$
$ 1) File name relative to Samplesdir
$    This can also be a directory relative to Samplesdir. In this case, all *.root files
$    in it will be considered.
$ 2) Legend name (can contain "#" for root-latex)
$ 3) Color of the contribution (in root definition)
$ 4) Cross section of the process
$ 5) Number of events that were generated. Can be set to "auto" or 0 for automatic determination
$    Automatic determination emplies that there are no preselection cuts!
$    In case, a full directory is defined as input (see bullet 1), the total number of events
$    in all files is considered.
$ 6) Legend order: The order the samples will appear in a stack plot if the "stackPlotter"
$    from the DAnalysis framework is used. Numbers don't need to follow one another
$    (see last line)
$ 7) Optional signal indicator. In case the signal has to be treated differently in the event loop
$    this can be indicated here and later checked in the loop.
$ 8) Optional other options (not used for now)


$delphes_testsample.root  , signal,       630, 23, auto, 1, true
$delphes_testsample.root  , background,   420, 56, auto, 2
$delphes_testsample.root  , background2,  432, 65, auto, 3
$/  ,                       background3,  431, 12, auto, 5

$ The last entry is an example for running over all input files in a directory

$B-4p-0-1-v1510_14TEV_200PU/                , B_ST0to1          , 820 , 200944.68129 ,  3863215 , 1 , false
$BB-4p-0-300-v1510_14TEV_200PU/             , BB_ST0to300       , 600 ,    249.97710 , 18693008 , 1 , false
$BB-4p-300-700-v1510_14TEV_200PU/           , BB_ST300to700     , 600 ,     35.23062 , 12946213 , 1 , false
$BB-4p-700-1300-v1510_14TEV_200PU/          , BB_ST700to1300    , 600 ,      4.13743 , 11239332 , 1 , false
$BB-4p-1300-2100-v1510_14TEV_200PU/         , BB_ST1300to2100   , 600 ,      0.41702 , 11322227 , 1 , false
$BB-4p-2100-100000-v1510_14TEV_200PU/       , BB_ST2100toInf    , 600 ,      0.04770 ,  9839523 , 1 , false
$BBB-4p-0-600-v1510_14TEV_200PU/            , BBB_ST0to600      , 632 ,      2.57304 , 13423940 , 1 , false
$BBB-4p-600-1300-v1510_14TEV_200PU/         , BBB_ST600to1300   , 632 ,      0.14935 , 14790247 , 1 , false
$BBB-4p-1300-100000-v1510_14TEV_200PU/      , BBB_ST1300toInf   , 632 ,      0.01274 , 16047607 , 1 , false
$Bj-4p-0-300-v1510_14TEV_200PU/             , Bj_ST0to300       , 867 ,  34409.92339 ,  2810994 , 1 , false
$Bj-4p-300-600-v1510_14TEV_200PU/           , Bj_ST300to600     , 867 ,   2642.85309 , 12830162 , 1 , false
$Bj-4p-600-1100-v1510_14TEV_200PU/          , Bj_ST600to1100    , 867 ,    294.12311 ,  4633655 , 1 , false
$Bj-4p-1100-1800-v1510_14TEV_200PU/         , Bj_ST1100to1800   , 867 ,     25.95000 ,  5648174 , 1 , false
$Bj-4p-1800-2700-v1510_14TEV_200PU/         , Bj_ST1800to2700   , 867 ,      2.42111 ,  5530401 , 1 , false
$Bj-4p-2700-3700-v1510_14TEV_200PU/         , Bj_ST2700to3700   , 867 ,      0.22690 ,  4573060 , 1 , false
$Bj-4p-3700-100000-v1510_14TEV_200PU/       , Bj_ST3700toInfo   , 867 ,      0.02767 ,  4840718 , 1 , false
$Bjj-vbf-4p-0-700-v1510_14TEV_200PU/        , Bjj_ST0to700      , 397 ,     86.45604 ,  5746151 , 1 , false
$Bjj-vbf-4p-700-1400-v1510_14TEV_200PU/     , Bjj_ST700to1400   , 397 ,      4.34869 ,  7005309 , 1 , false
$Bjj-vbf-4p-1400-2300-v1510_14TEV_200PU/    , Bjj_ST1400to2300  , 397 ,      0.32465 ,  6040315 , 1 , false
$Bjj-vbf-4p-2300-3400-v1510_14TEV_200PU/    , Bjj_ST2300to3400  , 397 ,      0.03032 ,  5618875 , 1 , false
$$Bjj-vbf-4p-3400-100000-v1510_14TEV_200PU/  , Bjj_ST3400toInf   , 397 ,      0.00313 ,     auto , 1 , false THIS SAMPLE IS MISSING!
$H-4p-0-300-v1510_14TEV_200PU/              , H_ST0to300        , 618 ,     21.55990 ,  6532466 , 1 , false
$H-4p-300-800-v1510_14TEV_200PU/            , H_ST300to800      , 618 ,      1.11282 ,  3788994 , 1 , false
$H-4p-800-1500-v1510_14TEV_200PU/           , H_ST800to1500     , 618 ,      0.09188 ,  3064444 , 1 , false
$H-4p-1500-100000-v1510_14TEV_200PU/        , H_ST1500toInf     , 618 ,      0.01009 ,  2812594 , 1 , false
$LL-4p-0-100-v1510_14TEV_200PU/             , LL_ST0to100       , 418 ,   1341.36923 ,  7258061 , 1 , false
$LL-4p-100-200-v1510_14TEV_200PU/           , LL_ST100to200     , 418 ,    156.29534 ,  9194762 , 1 , false
$LL-4p-200-500-v1510_14TEV_200PU/           , LL_ST200to500     , 418 ,     42.40132 ,  6633570 , 1 , false
$LL-4p-500-900-v1510_14TEV_200PU/           , LL_ST500to900     , 418 ,      2.84373 ,  6418145 , 1 , false
$LL-4p-900-1400-v1510_14TEV_200PU/          , LL_ST900to1400    , 418 ,      0.20914 ,  7066491 , 1 , false
$LL-4p-1400-100000-v1510_14TEV_200PU/       , LL_ST1400toInf    , 418 ,      0.02891 ,  7013868 , 1 , false
$LLB-4p-0-400-v1510_14TEV_200PU/            , LLB_ST0to400      , 807 ,      2.97380 ,  7697802 , 1 , false
$LLB-4p-400-900-v1510_14TEV_200PU/          , LLB_ST400to900    , 807 ,      0.22854 ,  6472608 , 1 , false
$LLB-4p-900-100000-v1510_14TEV_200PU/       , LLB_ST900toInf    , 807 ,      0.02080 , 15966281 , 1 , false
$tB-4p-0-500-v1510_14TEV_200PU/             , tB_ST0to500       , 882 ,     63.88923 ,  8217905 , 1 , false
$tB-4p-500-900-v1510_14TEV_200PU/           , tB_ST500to900     , 882 ,      7.12172 ,  6031970 , 1 , false
$tB-4p-900-1500-v1510_14TEV_200PU/          , tB_ST900to1500    , 882 ,      0.98030 ,  6030260 , 1 , false
$tB-4p-1500-2200-v1510_14TEV_200PU/         , tB_ST1500to2200   , 882 ,      0.08391 ,  6140657 , 1 , false
$tB-4p-2200-100000-v1510_14TEV_200PU/       , tB_ST2200toInf    , 882 ,      0.00953 ,  6294993 , 1 , false
$tj-4p-0-500-v1510_14TEV_200PU/             , tj_ST0to500       , 420 ,    109.73602 ,  6423908 , 1 , false
$tj-4p-500-1000-v1510_14TEV_200PU/          , tj_ST500to1000    , 420 ,      5.99325 ,  4063970 , 1 , false
$tj-4p-1000-1600-v1510_14TEV_200PU/         , tj_ST1000to1600   , 420 ,      0.37680 ,  3740340 , 1 , false
$tj-4p-1600-2400-v1510_14TEV_200PU/         , tj_ST1600to2400   , 420 ,      0.03462 ,  4066519 , 1 , false
$tj-4p-2400-100000-v1510_14TEV_200PU/       , tj_ST2400toInf    , 420 ,      0.00312 ,  4134162 , 1 , false
$tt-4p-0-600-v1510_14TEV_200PU/             , tt_ST0to600       , 801 ,    530.89358 ,  6600943 , 1 , false
$tt-4p-600-1100-v1510_14TEV_200PU/          , tt_ST600to1100    , 801 ,     42.55351 ,  4251723 , 1 , false
$tt-4p-1100-1700-v1510_14TEV_200PU/         , tt_ST1100to1700   , 801 ,      4.48209 ,  4160796 , 1 , false
$tt-4p-1700-2500-v1510_14TEV_200PU/         , tt_ST1700to2500   , 801 ,      0.52795 ,  4031683 , 1 , false
$tt-4p-2500-100000-v1510_14TEV_200PU/       , tt_ST2500toInf    , 801 ,      0.05449 ,  4250822 , 1 , false
$ttB-4p-0-900-v1510_14TEV_200PU/            , ttB_ST0to900      , 824 ,      2.66730 ,  9049518 , 1 , false
$ttB-4p-900-1600-v1510_14TEV_200PU/         , ttB_ST900to1600   , 824 ,      0.25047 ,  8186012 , 1 , false
$ttB-4p-1600-2500-v1510_14TEV_200PU/        , ttB_ST1600to2500  , 824 ,      0.02374 ,  8929669 , 1 , false
$ttB-4p-2500-100000-v1510_14TEV_200PU/      , ttB_ST2500toInf   , 824 ,      0.00209 , 23821464 , 1 , false
TChiWZ_300_260/                            , TChiWZ_300_260_sig, 616 ,      0.45145 ,     auto , 1 , true
TChiWZ_400_375/                            , TChiWZ_400_375_sig, 616 ,      0.14426 ,     auto , 1 , true

[inputfiles-end]
